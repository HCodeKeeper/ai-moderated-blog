version: '3'

services:

  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    container_name: django
    command: ./start
    volumes:
      - ./src:/ai_blog/src
    ports:
      - '${PORT}:8000'
    environment:
      - DJANGO_SUPERUSER_PASSWORD=1234
      - DJANGO_READ_DOT_ENV_FILE=false
      - ENVIRONMENT=docker
    env_file:
      - .env
    depends_on:
      - pgdb
      - redis

  pgdb:
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ALLOW_IP_RANGE=0.0.0.0/0 # Temporary while fixing pg_hba.conf
      - PGDATA=/var/lib/postgresql/data/pgdata
    container_name: pgdb
    env_file:
      - .env
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
      # The container should use the user and group IDs from the host. When we set the owner of /logs to the user "postgres" in the host (via run.sh), the ID of the container's user "postgres" will match.
      # From https://stackoverflow.com/questions/23544282/what-is-the-best-way-to-manage-permissions-for-docker-shared-volumes#45640469
#      - /etc/passwd:/etc/passwd:ro
#      - /etc/group:/etc/group:ro
      - ./compose/local/postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    ports:
      - '${POSTGRES_PORT}:5432'

  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning

  workers:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    container_name: 'celery'
    volumes:
      - ./src:/ai_blog/src
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - DJANGO_SUPERUSER_PASSWORD=1234
      - DJANGO_READ_DOT_ENV_FILE=false
      - ENVIRONMENT=docker
    env_file:
      - .env
    command: sh -c "cd src && celery -A api worker --pool solo -l info"
    depends_on:
      - redis
      - django


volumes:
  pgdbdata:
